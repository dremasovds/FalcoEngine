#include <string>

namespace shaders
{
	static std::string terrainTreeBillboardFragment =
		"$input v_texcoord0, v_position\n"
		"\n"
		"uniform sampler2D u_albedoMap;\n"
		"uniform vec4 u_ambientColor;\n"
		"uniform vec4 u_color;\n"
		"\n"
		"uniform samplerCube u_envMap;\n"
		"uniform vec4 u_camPos;\n"
		"uniform vec4 u_giParams;\n"
		"uniform vec4 u_normal;\n"
		"\n"
		"void main()\n"
		"{\n"
		"	vec4 albedo = texture2D(u_albedoMap, v_texcoord0);\n"
		"	if (albedo.a < 0.3)\n"
		"		discard;\n"
		"	\n"
		"	//GI\n"
		"	vec3 gi = vec3(1.0);\n"
		"	float amb = 1.0;\n"
		"	if (u_giParams.x == 1.0)\n"
		"	{\n"
		"		float roughness = 1.0;\n"
		"		\n"
		"		vec3 normal = normalize(u_normal.xyz);\n"
		"		\n"
		"		vec3 N = normalize(normal);\n"
		"		vec3 V = normalize(u_camPos.xyz - v_position);\n"
		"		\n"
		"		vec3 R = reflect(V, N);\n"
		"		\n"
		"		float MAX_REFLECTION_LOD = 10.0;\n"
		"		vec3 prefilteredColor = textureCubeLod(u_envMap, R, roughness * MAX_REFLECTION_LOD).rgb;\n"
		"		gi = prefilteredColor * u_giParams.y * 5.0;\n"
		"		amb = u_giParams.y;\n"
		"	}\n"
		"	\n"
		"	vec3 color = (albedo.rgb * amb) * u_ambientColor.rgb * u_color.rgb;\n"
		"	gl_FragColor = vec4(color, 1.0);\n"
		"}\n";
}