#include <string>

namespace shaders
{
	static std::string defaultShader =
		"name \"Hidden/System/Default\"\n"
		"render_mode forward\n"
		"\n"
		"params\n"
		"{\n"
		"\n"
		"}\n"
		"\n"
		"pass\n"
		"{\n"
		"	tags\n"
		"	{\n"
		"\n"
		"	}\n"
		"\n"
		"	varying\n"
		"	{\n"
		"		vec3 a_position : POSITION;\n"
		"		vec4 a_weight : BLENDWEIGHT;\n"
		"		vec4 a_indices : BLENDINDICES;\n"
		" }\n"
		"\n"
		"	vertex\n"
		"	{\n"
		"		$input a_position, a_weight, a_indices\n"
		"\n"
		"		#include \"common.sh\"\n"
		"\n"
		"		uniform vec4 u_skinned;\n"
		"		uniform mat4 u_boneMatrix[128];\n"
		"\n"
		"		void main()\n"
		"		{\n"
		"			mat4 model = u_model[0];\n"
		"\n"
		"			if (u_skinned.x == 1.0)\n"
		"			{\n"
		"				model = mul(u_model[0], a_weight.x * u_boneMatrix[int(a_indices.x)] +\n"
		"										a_weight.y * u_boneMatrix[int(a_indices.y)] +\n"
		"										a_weight.z * u_boneMatrix[int(a_indices.z)] +\n"
		"										a_weight.w * u_boneMatrix[int(a_indices.w)]);\n"
		"\n"
		"				vec3 vwpos = mul(model, vec4(a_position, 1.0)).xyz;\n"
		"				gl_Position = mul(u_viewProj, vec4(vwpos, 1.0));\n"
		"			}\n"
		"			else\n"
		"			{\n"
		"				gl_Position = mul(u_modelViewProj, vec4(a_position, 1.0));\n"
		"			}\n"
		"		}\n"
		"	}\n"
		"\n"
		"	fragment\n"
		"	{\n"
		"		#include \"common.sh\"\n"
		"\n"
		"		void main()\n"
		"		{\n"
		"			gl_FragColor = vec4(1.0, 0.0, 1.0, 1.0);\n"
		"		}\n"
		"	}\n"
		"}";
}